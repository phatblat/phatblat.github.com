<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shell | phatblat's reflog]]></title>
  <link href="http://phatblat.com/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://phatblat.com/"/>
  <updated>2015-02-04T23:00:39-07:00</updated>
  <id>http://phatblat.com/</id>
  <author>
    <name><![CDATA[Ben Chatelain]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Speed up pod install]]></title>
    <link href="http://phatblat.com/blog/2014/07/30/pod-install/"/>
    <updated>2014-07-30T22:30:54-06:00</updated>
    <id>http://phatblat.com/blog/2014/07/30/pod-install</id>
    <content type="html"><![CDATA[<p>If you use CocoaPods, you&rsquo;re familiar with the <code>pod install</code> command. Especially in the process of creating a pod, you end up running this command a lot. The annoying part is that there&rsquo;s a delay before it starts returning much output. This is where the pod gem reaches out to check to see if the specs have changed at all.</p>

<p>Even when the pod version specifiers haven&rsquo;t changed, CocoaPods reaches out to fetch any updates to the <code>master</code> spec repo, along with any private spec repos that may be configured. During local development of a pod, this slows down the process unnecessarily as the only changes you care about are local to your hard drive.</p>

<p>```
$ pod install &mdash;verbose</p>

<p>Analyzing dependencies</p>

<p>Updating spec repositories
  $ /usr/local/bin/git rev-parse  >/dev/null 2>&amp;1
  $ /usr/local/bin/git ls-remote
  From <a href="https://github.com/CocoaPods/Specs.git">https://github.com/CocoaPods/Specs.git</a>
  f83cbf438a0f80b7df76534ffa08efcb359ce982  HEAD
  f83cbf438a0f80b7df76534ffa08efcb359ce982  refs/heads/master
  fe7df26fe5545072c11abac241d73087a29e87d9  refs/pull/1/head
  1748dab37fe08120775777a084e0fb9da10c4a63  refs/pull/1/merge
  &hellip;
  5a7c7be28f0859865035c324e625c507cf858f4a  refs/pull/9998/head
  7a19ff8bfbaf00a485ca2274a229205d715dcbf7  refs/pull/9999/head
Updating spec repo <code>master</code>
  $ /usr/local/bin/git pull &mdash;ff-only
  &hellip;yawn&hellip;
```</p>

<!-- more -->


<h2>&mdash;no-repo-update</h2>

<p>The <strong>&mdash;no-repo-update</strong> switch suppresses this spec repo update and speeds up the install command considerably.</p>

<p>Since that is way too much to type for such a common command to fly across my terminal, I like to wrap these up in a nice, short <a href="https://github.com/phatblat/dotfiles/blob/master/.dotfiles/shell/alias.zsh#L31">alias</a>.</p>

<p><code>
alias pi='pod install --no-repo-update'
</code></p>

<p>Another situation where suppressing this automatic spec repo update is helpful is when you have unreliable or no network connection. The spec repo update is going to fail anyway.</p>

<p>Now, you don&rsquo;t want to use this alias every time you need to do a <code>pod install</code> as your <code>master</code> spec repo would get out of date and you could miss important updates. In general, I allow <code>pod install</code> or <code>pod update</code> to update my spec repos the first time I run them on any given day and suppress the repo update the rest of the day.</p>
]]></content>
  </entry>
  
</feed>
